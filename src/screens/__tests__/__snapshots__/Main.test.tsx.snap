// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "additive",
    }
  }
  style={
    {
      "backgroundColor": "#f8f9fa",
      "flex": 1,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "flexShrink": 1,
        "paddingHorizontal": 40,
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "gap": 24,
          "marginTop": 19.714285714285715,
        }
      }
    >
      <View
        style={
          {
            "flexGrow": 1,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "backgroundColor": "lightgray",
              "borderRadius": 24,
              "flexDirection": "row",
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              {
                "paddingLeft": 16,
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={40}
              bbWidth={40}
              fill="none"
              focusable={false}
              height={40}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke="gray"
              strokeWidth={1.5}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 40,
                    "width": 40,
                  },
                ]
              }
              vbHeight={24}
              vbWidth={24}
              width={40}
            >
              <RNSVGGroup
                fill={null}
                propList={
                  [
                    "fill",
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={
                  {
                    "payload": 4286611584,
                    "type": 0,
                  }
                }
                strokeWidth={1.5}
              >
                <RNSVGPath
                  d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  strokeLinecap={1}
                  strokeLinejoin={1}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <TextInput
            maxLength={28}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="Search"
            placeholderTextColor="gray"
            style={
              [
                {
                  "backgroundColor": "lightgray",
                  "flexGrow": 1,
                  "fontSize": 32,
                  "paddingVertical": 19.714285714285715,
                },
                {
                  "paddingHorizontal": 8,
                },
                undefined,
              ]
            }
            value=""
          />
        </View>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <AppButton
          pressedOpacity={1}
          style={
            {
              "height": 841.1428571428571,
            }
          }
        />
      }
      contentContainerStyle={
        {
          "marginTop": 16.428571428571427,
          "minHeight": "100%",
        }
      }
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      onViewableItemsChanged={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={[]}
      viewabilityConfig={
        {
          "viewAreaCoveragePercentThreshold": 100,
        }
      }
      viewabilityConfigCallbackPairs={
        [
          {
            "onViewableItemsChanged": [Function],
            "viewabilityConfig": {
              "viewAreaCoveragePercentThreshold": 100,
            },
          },
        ]
      }
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={10}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "opacity": 1,
                },
                {
                  "height": 841.1428571428571,
                },
              ]
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#f8f9fa",
          "borderTopColor": "gray",
          "borderTopWidth": 1,
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "minHeight": 98.57142857142857,
          "paddingHorizontal": 40,
          "paddingTop": 19.714285714285715,
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={10}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": 1,
          },
          {
            "alignItems": "center",
            "flex": 1,
          },
        ]
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={64}
        bbWidth={64}
        focusable={false}
        height={64}
        meetOrSlice={0}
        minX={0}
        minY={-960}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 64,
              "width": 64,
            },
          ]
        }
        vbHeight={960}
        vbWidth={960}
        width={64}
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        >
          <RNSVGPath
            d="M417-417H166v-126h251v-251h126v251h251v126H543v251H417v-251Z"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={10}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "opacity": 1,
          },
          {
            "alignItems": "center",
            "flex": 1,
          },
        ]
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={52}
        bbWidth={52}
        fill="none"
        focusable={false}
        height={52}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="black"
        strokeWidth={2.5}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 52,
              "width": 52,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={52}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
            ]
          }
          stroke={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          strokeWidth={2.5}
        >
          <RNSVGPath
            d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            strokeLinecap={1}
            strokeLinejoin={1}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</RNCSafeAreaView>
`;
